version: "3.8"

services:
  # .
  proxy:
    build: ./packages/load-balancer
    environment:
      DOCKER_API_LOCATION: "/var/run/docker.sock"
      SERVICE_PORT: 80
      GROUP_PORT: 80
      GROUP_NAME: "database"
    ports:
      - ${EXPOSE_PORT}:80
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    working_dir: /app
    # command: [ "npm", "run", "start" ] # @todo check why 1st connection fails on normal start
    command: [ "npm", "run", "start:dev" ]
    restart: unless-stopped
    networks:
      - db-nodes

  # .
  database:
    build: ./packages/database
    deploy:
      mode: replicated
      replicas: ${DATABASE_REPLICAS}
    environment:
      PORT: 80
      MESH_NETWORK_URL: "http://proxy"
    working_dir: /app
    command: [ "npm", "run", "start" ]
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://127.0.0.1/healthcheck || exit 1"
      interval: 5s
      timeout: 2s
      retries: 5
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - db-nodes
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - proxy

  # .
  # command: ["npm", "run", "test"]
  # command: ["npm", "run", "stress"]
  tests:
    build: ./packages/tests
    environment:
      SERVICE_URL: "http://proxy:80"
    working_dir: /app
    networks:
      - db-nodes
    depends_on:
      - proxy

networks:
  db-nodes:
    driver: bridge
